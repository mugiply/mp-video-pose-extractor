{"version":3,"file":"ngx-mp-pose-extractor.mjs","sources":["../../../projects/ngx-mp-pose-extractor/src/lib/ngx-mp-pose-extractor.service.ts","../../../projects/ngx-mp-pose-extractor/src/lib/ngx-mp-pose-extractor.component.ts","../../../projects/ngx-mp-pose-extractor/src/lib/ngx-mp-pose-extractor.module.ts","../../../projects/ngx-mp-pose-extractor/src/lib/classes/internals/image-trimmer.ts","../../../projects/ngx-mp-pose-extractor/src/lib/classes/pose-set.ts","../../../projects/ngx-mp-pose-extractor/src/lib/services/pose-composer.service.ts","../../../projects/ngx-mp-pose-extractor/src/lib/services/pose-extractor.service.ts","../../../projects/ngx-mp-pose-extractor/src/public-api.ts","../../../projects/ngx-mp-pose-extractor/src/ngx-mp-pose-extractor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxMpPoseExtractorService {\n\n  constructor() { }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-ngx-mp-pose-extractor',\n  template: `\n    <p>\n      ngx-mp-pose-extractor works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NgxMpPoseExtractorComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxMpPoseExtractorComponent } from './ngx-mp-pose-extractor.component';\n\n@NgModule({\n  declarations: [NgxMpPoseExtractorComponent],\n  imports: [],\n  exports: [NgxMpPoseExtractorComponent],\n})\nexport class NgxMpPoseExtractorModule {}\n","import { lstat } from 'fs';\n\nexport class ImageTrimmer {\n  private canvas?: HTMLCanvasElement;\n  private context?: CanvasRenderingContext2D;\n\n  constructor() {}\n\n  async loadByDataUrl(dataUrl: string) {\n    const image: HTMLImageElement = await new Promise((resolve, reject) => {\n      const image = new Image();\n      image.src = dataUrl;\n      image.onload = () => {\n        resolve(image);\n      };\n    });\n\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d')!;\n    canvas.width = image.width;\n    canvas.height = image.height;\n    context.drawImage(image, 0, 0);\n\n    this.canvas = canvas;\n    this.context = context;\n  }\n\n  async trimMargin(marginColor: string, diffThreshold: number = 10) {\n    if (this.canvas === undefined) throw new Error('Image is not loaded');\n\n    // マージンを検出する範囲を指定 (左端から0〜20%)\n    const edgeDetectionRangeMinX = 0;\n    const edgeDetectionRangeMaxX = Math.floor(this.canvas.width * 0.2);\n\n    // マージンの端を検出\n    const edgePositionFromTop = await this.getVerticalEdgePositionOfColor(\n      marginColor,\n      'top',\n      diffThreshold,\n      edgeDetectionRangeMinX,\n      edgeDetectionRangeMaxX\n    );\n    const marginTop = edgePositionFromTop != null ? edgePositionFromTop : 0;\n\n    const edgePositionFromBottom = await this.getVerticalEdgePositionOfColor(\n      marginColor,\n      'bottom',\n      diffThreshold,\n      edgeDetectionRangeMinX,\n      edgeDetectionRangeMaxX\n    );\n    const marginBottom =\n      edgePositionFromBottom != null\n        ? edgePositionFromBottom\n        : this.canvas.height;\n\n    const oldHeight = this.canvas.height;\n    const newHeight = marginBottom - marginTop;\n    this.crop(0, marginTop, this.canvas.width, newHeight);\n\n    return {\n      marginTop: marginTop,\n      marginBottom: marginBottom,\n      heightNew: newHeight,\n      heightOld: oldHeight,\n      width: this.canvas.width,\n    };\n  }\n\n  async crop(x: number, y: number, w: number, h: number) {\n    if (!this.canvas || !this.context) return;\n\n    const newCanvas = document.createElement('canvas');\n    const newContext = newCanvas.getContext('2d')!;\n    newCanvas.width = w;\n    newCanvas.height = h;\n    newContext.drawImage(\n      this.canvas,\n      x,\n      y,\n      newCanvas.width,\n      newCanvas.height,\n      0,\n      0,\n      newCanvas.width,\n      newCanvas.height\n    );\n    this.replaceCanvas(newCanvas);\n  }\n\n  async replaceColor(\n    srcColor: string,\n    dstColor: string,\n    diffThreshold: number\n  ) {\n    if (!this.canvas || !this.context) return;\n\n    const imageData = this.context.getImageData(\n      0,\n      0,\n      this.canvas.width,\n      this.canvas.height\n    );\n\n    const dstColorValue = this.hexColorCodeToRgba(dstColor);\n\n    for (let x = 0; x < imageData.width; x++) {\n      for (let y = 0; y < imageData.height; y++) {\n        const idx = (x + y * imageData.width) * 4;\n        const red = imageData.data[idx + 0];\n        const green = imageData.data[idx + 1];\n        const blue = imageData.data[idx + 2];\n        const alpha = imageData.data[idx + 3];\n\n        const colorCode = this.rgbToHexColorCode(red, green, blue);\n        if (!this.isSimilarColor(srcColor, colorCode, diffThreshold)) {\n          continue;\n        }\n\n        imageData.data[idx + 0] = dstColorValue.r;\n        imageData.data[idx + 1] = dstColorValue.g;\n        imageData.data[idx + 2] = dstColorValue.b;\n        if (dstColorValue.a !== undefined) {\n          imageData.data[idx + 3] = dstColorValue.a;\n        }\n      }\n    }\n\n    this.context.putImageData(imageData, 0, 0);\n  }\n\n  async getMarginColor() {\n    if (!this.canvas || !this.context) {\n      return null;\n    }\n    let marginColor: string | null = null;\n\n    const imageData = this.context.getImageData(\n      0,\n      0,\n      this.canvas.width,\n      this.canvas.height\n    );\n\n    let isBreak = false;\n    for (let x = 0; x < imageData.width && !isBreak; x++) {\n      for (let y = 0; y < imageData.height; y++) {\n        const idx = (x + y * imageData.width) * 4;\n        const red = imageData.data[idx + 0];\n        const green = imageData.data[idx + 1];\n        const blue = imageData.data[idx + 2];\n        const alpha = imageData.data[idx + 3];\n\n        const colorCode = this.rgbToHexColorCode(red, green, blue);\n        if (marginColor != colorCode) {\n          if (marginColor === null) {\n            marginColor = colorCode;\n          } else {\n            isBreak = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return marginColor;\n  }\n\n  async getVerticalEdgePositionOfColor(\n    color: string,\n    direction: 'top' | 'bottom',\n    diffThreshold: number,\n    minX?: number,\n    maxX?: number\n  ) {\n    if (!this.canvas || !this.context) {\n      return null;\n    }\n\n    if (minX === undefined) {\n      minX = 0;\n    }\n    if (maxX === undefined) {\n      maxX = this.canvas.width;\n    }\n\n    const imageData = this.context.getImageData(\n      0,\n      0,\n      this.canvas.width,\n      this.canvas.height\n    );\n\n    let isBreak = false;\n\n    let edgePositionY;\n    if (direction === 'top') {\n      edgePositionY = 0;\n\n      for (let y = 0; y < imageData.height; y++) {\n        for (let x = 0; x < maxX && !isBreak; x++) {\n          const idx = (x + y * imageData.width) * 4;\n          const red = imageData.data[idx + 0];\n          const green = imageData.data[idx + 1];\n          const blue = imageData.data[idx + 2];\n          const alpha = imageData.data[idx + 3];\n\n          const colorCode = this.rgbToHexColorCode(red, green, blue);\n          if (\n            color == colorCode ||\n            this.isSimilarColor(color, colorCode, diffThreshold)\n          ) {\n            if (edgePositionY < y) {\n              edgePositionY = y;\n            }\n          } else {\n            isBreak = true;\n            break;\n          }\n        }\n      }\n\n      if (edgePositionY !== 0) {\n        edgePositionY += 1;\n      }\n    } else if (direction === 'bottom') {\n      edgePositionY = this.canvas.height;\n\n      for (let y = imageData.height - 1; y >= 0; y--) {\n        for (let x = 0; x < imageData.width && !isBreak; x++) {\n          const idx = (x + y * imageData.width) * 4;\n          const red = imageData.data[idx + 0];\n          const green = imageData.data[idx + 1];\n          const blue = imageData.data[idx + 2];\n          const alpha = imageData.data[idx + 3];\n\n          const colorCode = this.rgbToHexColorCode(red, green, blue);\n          if (\n            color == colorCode ||\n            this.isSimilarColor(color, colorCode, diffThreshold)\n          ) {\n            if (edgePositionY > y) {\n              edgePositionY = y;\n            }\n          } else {\n            isBreak = true;\n            break;\n          }\n        }\n      }\n\n      if (edgePositionY !== this.canvas.height) {\n        edgePositionY -= 1;\n      }\n    }\n\n    return edgePositionY;\n  }\n\n  async getWidth() {\n    return this.canvas?.width;\n  }\n\n  async getHeight() {\n    return this.canvas?.height;\n  }\n\n  async resizeWithFit(param: { width?: number; height?: number }) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let newWidth: number = 0,\n      newHeight: number = 0;\n    if (param.width && this.canvas.width > param.width) {\n      newWidth = param.width ? param.width : this.canvas.width;\n      newHeight = this.canvas.height * (newWidth / this.canvas.width);\n    } else if (param.height && this.canvas.height > param.height) {\n      newHeight = param.height ? param.height : this.canvas.height;\n      newWidth = this.canvas.width * (newHeight / this.canvas.height);\n    } else {\n      return;\n    }\n\n    const newCanvas = document.createElement('canvas');\n    const newContext = newCanvas.getContext('2d')!;\n    newCanvas.width = newWidth;\n    newCanvas.height = newHeight;\n    newContext.drawImage(this.canvas, 0, 0, newWidth, newHeight);\n    this.replaceCanvas(newCanvas);\n  }\n\n  private replaceCanvas(canvas: HTMLCanvasElement) {\n    if (!this.canvas || !this.context) {\n      this.canvas = canvas;\n      this.context = this.canvas.getContext('2d')!;\n      return;\n    }\n\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n    delete this.canvas;\n    delete this.context;\n\n    this.canvas = canvas;\n    this.context = this.canvas.getContext('2d')!;\n  }\n\n  async getDataUrl(\n    mime: 'image/jpeg' | 'image/png' | 'image/webp' = 'image/jpeg',\n    imageQuality?: number\n  ) {\n    if (!this.canvas) {\n      return null;\n    }\n\n    if (mime === 'image/jpeg' || mime === 'image/webp') {\n      return this.canvas.toDataURL(mime, imageQuality);\n    } else {\n      return this.canvas.toDataURL(mime);\n    }\n  }\n\n  private hexColorCodeToRgba(color: string): {\n    r: number;\n    g: number;\n    b: number;\n    a?: number;\n  } {\n    const r = parseInt(color.substr(1, 2), 16);\n    const g = parseInt(color.substr(3, 2), 16);\n    const b = parseInt(color.substr(5, 2), 16);\n    if (color.length === 9) {\n      const a = parseInt(color.substr(7, 2), 16);\n      return { r, g, b, a };\n    }\n    return { r, g, b };\n  }\n\n  private rgbToHexColorCode(r: number, g: number, b: number) {\n    return '#' + this.valueToHex(r) + this.valueToHex(g) + this.valueToHex(b);\n  }\n\n  private valueToHex(value: number) {\n    return ('0' + value.toString(16)).slice(-2);\n  }\n\n  private isSimilarColor(\n    color1: string,\n    color2: string,\n    diffThreshold: number\n  ) {\n    const color1Rgb = this.hexColorCodeToRgba(color1);\n    const color2Rgb = this.hexColorCodeToRgba(color2);\n    const diff =\n      Math.abs(color1Rgb.r - color2Rgb.r) +\n      Math.abs(color1Rgb.g - color2Rgb.g) +\n      Math.abs(color1Rgb.b - color2Rgb.b);\n    return diff < diffThreshold;\n  }\n}\n","import { POSE_LANDMARKS, Results } from '@mediapipe/holistic';\nimport * as JSZip from 'jszip';\nimport { PoseSetItem } from '../interfaces/pose-set-item';\nimport { PoseSetJson } from '../interfaces/pose-set-json';\nimport { PoseSetJsonItem } from '../interfaces/pose-set-json-item';\nimport { PoseVector } from '../interfaces/pose-vector';\n\n// @ts-ignore\nimport cosSimilarity from 'cos-similarity';\nimport { SimilarPoseItem } from '../interfaces/matched-pose-item';\nimport { ImageTrimmer } from './internals/image-trimmer';\n\nexport class PoseSet {\n  public generator?: string;\n  public version?: number;\n  private videoMetadata!: {\n    name: string;\n    width: number;\n    height: number;\n    duration: number;\n    firstPoseDetectedTime: number;\n  };\n  public poses: PoseSetItem[] = [];\n  public isFinalized?: boolean = false;\n\n  public static readonly POSE_VECTOR_MAPPINGS = [\n    'rightWristToRightElbow',\n    'rightElbowToRightShoulder',\n    'leftWristToLeftElbow',\n    'leftElbowToLeftShoulder',\n  ];\n\n  // 画像書き出し時の設定\n  private readonly IMAGE_WIDTH: number = 1080;\n  private readonly IMAGE_MIME: 'image/jpeg' | 'image/png' | 'image/webp' =\n    'image/webp';\n  private readonly IMAGE_QUALITY = 0.8;\n\n  // 画像の余白除去\n  private readonly IMAGE_MARGIN_TRIMMING_COLOR = '#000000';\n  private readonly IMAGE_MARGIN_TRIMMING_DIFF_THRESHOLD = 50;\n\n  // 画像の背景色置換\n  private readonly IMAGE_BACKGROUND_REPLACE_SRC_COLOR = '#016AFD';\n  private readonly IMAGE_BACKGROUND_REPLACE_DST_COLOR = '#FFFFFF00';\n  private readonly IMAGE_BACKGROUND_REPLACE_DIFF_THRESHOLD = 130;\n\n  constructor() {\n    this.videoMetadata = {\n      name: '',\n      width: 0,\n      height: 0,\n      duration: 0,\n      firstPoseDetectedTime: 0,\n    };\n  }\n\n  getVideoName() {\n    return this.videoMetadata.name;\n  }\n\n  setVideoName(videoName: string) {\n    this.videoMetadata.name = videoName;\n  }\n\n  setVideoMetaData(width: number, height: number, duration: number) {\n    this.videoMetadata.width = width;\n    this.videoMetadata.height = height;\n    this.videoMetadata.duration = duration;\n  }\n\n  getNumberOfPoses(): number {\n    if (this.poses === undefined) return -1;\n    return this.poses.length;\n  }\n\n  getPoses(): PoseSetItem[] {\n    if (this.poses === undefined) return [];\n    return this.poses;\n  }\n\n  getPoseByTime(timeMiliseconds: number): PoseSetItem | undefined {\n    if (this.poses === undefined) return undefined;\n    return this.poses.find((pose) => pose.timeMiliseconds === timeMiliseconds);\n  }\n\n  pushPose(\n    videoTimeMiliseconds: number,\n    frameImageDataUrl: string | undefined,\n    poseImageDataUrl: string | undefined,\n    videoWidth: number,\n    videoHeight: number,\n    videoDuration: number,\n    results: Results\n  ) {\n    this.setVideoMetaData(videoWidth, videoHeight, videoDuration);\n\n    if (results.poseLandmarks === undefined) return;\n\n    if (this.poses.length === 0) {\n      this.videoMetadata.firstPoseDetectedTime = videoTimeMiliseconds;\n    }\n\n    const poseLandmarksWithWorldCoordinate: any[] = (results as any).ea\n      ? (results as any).ea\n      : [];\n    if (poseLandmarksWithWorldCoordinate.length === 0) {\n      console.warn(\n        `[PoseSet] pushPose - Could not get the pose with the world coordinate`,\n        results\n      );\n      return;\n    }\n\n    const poseVector = PoseSet.getPoseVector(poseLandmarksWithWorldCoordinate);\n    if (!poseVector) {\n      console.warn(\n        `[PoseSet] pushPose - Could not get the pose vector`,\n        poseLandmarksWithWorldCoordinate\n      );\n      return;\n    }\n\n    const pose: PoseSetItem = {\n      timeMiliseconds: videoTimeMiliseconds,\n      durationMiliseconds: -1,\n      pose: poseLandmarksWithWorldCoordinate.map((worldCoordinateLandmark) => {\n        return [\n          worldCoordinateLandmark.x,\n          worldCoordinateLandmark.y,\n          worldCoordinateLandmark.z,\n          worldCoordinateLandmark.visibility,\n        ];\n      }),\n      leftHand: results.leftHandLandmarks?.map((normalizedLandmark) => {\n        return [\n          normalizedLandmark.x,\n          normalizedLandmark.y,\n          normalizedLandmark.z,\n        ];\n      }),\n      rightHand: results.leftHandLandmarks?.map((normalizedLandmark) => {\n        return [\n          normalizedLandmark.x,\n          normalizedLandmark.y,\n          normalizedLandmark.z,\n        ];\n      }),\n      vectors: poseVector,\n      frameImageDataUrl: frameImageDataUrl,\n      poseImageDataUrl: poseImageDataUrl,\n    };\n\n    if (1 <= this.poses.length) {\n      const lastPose = this.poses[this.poses.length - 1];\n      if (PoseSet.isSimilarPose(lastPose.vectors, pose.vectors)) {\n        return;\n      }\n\n      // 前回のポーズの持続時間を設定\n      const poseDurationMiliseconds =\n        videoTimeMiliseconds - lastPose.timeMiliseconds;\n      this.poses[this.poses.length - 1].durationMiliseconds =\n        poseDurationMiliseconds;\n    }\n\n    this.poses.push(pose);\n  }\n\n  async finalize() {\n    if (0 == this.poses.length) {\n      this.isFinalized = true;\n      return;\n    }\n\n    // 最後のポーズの持続時間を設定\n    if (1 <= this.poses.length) {\n      const lastPose = this.poses[this.poses.length - 1];\n      if (lastPose.durationMiliseconds == -1) {\n        const poseDurationMiliseconds =\n          this.videoMetadata.duration - lastPose.timeMiliseconds;\n        this.poses[this.poses.length - 1].durationMiliseconds =\n          poseDurationMiliseconds;\n      }\n    }\n\n    // 重複ポーズを除去\n    this.removeDuplicatedPoses();\n\n    // 画像のマージンを取得\n    console.log(`[PoseSet] finalize - Detecting image margins...`);\n    let imageTrimming:\n      | {\n          marginTop: number;\n          marginBottom: number;\n          heightNew: number;\n          heightOld: number;\n          width: number;\n        }\n      | undefined = undefined;\n    for (const pose of this.poses) {\n      let imageTrimmer = new ImageTrimmer();\n      if (!pose.frameImageDataUrl) {\n        continue;\n      }\n      await imageTrimmer.loadByDataUrl(pose.frameImageDataUrl);\n\n      const marginColor = await imageTrimmer.getMarginColor();\n      console.log(\n        `[PoseSet] finalize - Detected margin color...`,\n        pose.timeMiliseconds,\n        marginColor\n      );\n      if (marginColor === null) continue;\n      if (marginColor !== this.IMAGE_MARGIN_TRIMMING_COLOR) {\n        continue;\n      }\n      const trimmed = await imageTrimmer.trimMargin(\n        marginColor,\n        this.IMAGE_MARGIN_TRIMMING_DIFF_THRESHOLD\n      );\n      if (!trimmed) continue;\n      imageTrimming = trimmed;\n      console.log(\n        `[PoseSet] finalize - Determined image trimming positions...`,\n        trimmed\n      );\n      break;\n    }\n\n    // 画像を整形\n    for (const pose of this.poses) {\n      let imageTrimmer = new ImageTrimmer();\n      if (!pose.frameImageDataUrl || !pose.poseImageDataUrl) {\n        continue;\n      }\n\n      console.log(\n        `[PoseSet] finalize - Processing image...`,\n        pose.timeMiliseconds\n      );\n\n      // 画像を整形 - フレーム画像\n      await imageTrimmer.loadByDataUrl(pose.frameImageDataUrl);\n\n      if (imageTrimming) {\n        await imageTrimmer.crop(\n          0,\n          imageTrimming.marginTop,\n          imageTrimming.width,\n          imageTrimming.heightNew\n        );\n      }\n\n      await imageTrimmer.replaceColor(\n        this.IMAGE_BACKGROUND_REPLACE_SRC_COLOR,\n        this.IMAGE_BACKGROUND_REPLACE_DST_COLOR,\n        this.IMAGE_BACKGROUND_REPLACE_DIFF_THRESHOLD\n      );\n\n      await imageTrimmer.resizeWithFit({\n        width: this.IMAGE_WIDTH,\n      });\n\n      let newDataUrl = await imageTrimmer.getDataUrl(\n        this.IMAGE_MIME,\n        this.IMAGE_MIME === 'image/jpeg' || this.IMAGE_MIME === 'image/webp'\n          ? this.IMAGE_QUALITY\n          : undefined\n      );\n      if (!newDataUrl) {\n        console.warn(\n          `[PoseSet] finalize - Could not get the new dataurl for frame image`\n        );\n        continue;\n      }\n      pose.frameImageDataUrl = newDataUrl;\n\n      // 画像を整形 - ポーズプレビュー画像\n      imageTrimmer = new ImageTrimmer();\n      await imageTrimmer.loadByDataUrl(pose.poseImageDataUrl);\n\n      if (imageTrimming) {\n        await imageTrimmer.crop(\n          0,\n          imageTrimming.marginTop,\n          imageTrimming.width,\n          imageTrimming.heightNew\n        );\n      }\n\n      await imageTrimmer.resizeWithFit({\n        width: this.IMAGE_WIDTH,\n      });\n\n      newDataUrl = await imageTrimmer.getDataUrl(\n        this.IMAGE_MIME,\n        this.IMAGE_MIME === 'image/jpeg' || this.IMAGE_MIME === 'image/webp'\n          ? this.IMAGE_QUALITY\n          : undefined\n      );\n      if (!newDataUrl) {\n        console.warn(\n          `[PoseSet] finalize - Could not get the new dataurl for pose preview image`\n        );\n        continue;\n      }\n      pose.poseImageDataUrl = newDataUrl;\n    }\n\n    this.isFinalized = true;\n  }\n\n  removeDuplicatedPoses(): void {\n    // 全ポーズを比較して類似ポーズを削除\n    const newPoses: PoseSetItem[] = [];\n    for (const poseA of this.poses) {\n      let isDuplicated = false;\n      for (const poseB of newPoses) {\n        if (PoseSet.isSimilarPose(poseA.vectors, poseB.vectors)) {\n          isDuplicated = true;\n          break;\n        }\n      }\n      if (isDuplicated) continue;\n\n      newPoses.push(poseA);\n    }\n\n    console.info(\n      `[PoseSet] removeDuplicatedPoses - Reduced ${this.poses.length} poses -> ${newPoses.length} poses`\n    );\n    this.poses = newPoses;\n  }\n\n  getSimilarPoses(\n    results: Results,\n    threshold: number = 0.9\n  ): SimilarPoseItem[] {\n    const poseVector = PoseSet.getPoseVector((results as any).ea);\n    if (!poseVector) throw 'Could not get the pose vector';\n\n    const poses = [];\n    for (const pose of this.poses) {\n      const similarity = PoseSet.getPoseSimilarity(pose.vectors, poseVector);\n      if (threshold <= similarity) {\n        poses.push({\n          ...pose,\n          similarity: similarity,\n        });\n      }\n    }\n\n    return poses;\n  }\n\n  static getPoseVector(\n    poseLandmarks: { x: number; y: number; z: number }[]\n  ): PoseVector | undefined {\n    return {\n      rightWristToRightElbow: [\n        poseLandmarks[POSE_LANDMARKS.RIGHT_WRIST].x -\n          poseLandmarks[POSE_LANDMARKS.RIGHT_ELBOW].x,\n        poseLandmarks[POSE_LANDMARKS.RIGHT_WRIST].y -\n          poseLandmarks[POSE_LANDMARKS.RIGHT_ELBOW].y,\n        poseLandmarks[POSE_LANDMARKS.RIGHT_WRIST].z -\n          poseLandmarks[POSE_LANDMARKS.RIGHT_ELBOW].z,\n      ],\n      rightElbowToRightShoulder: [\n        poseLandmarks[POSE_LANDMARKS.RIGHT_ELBOW].x -\n          poseLandmarks[POSE_LANDMARKS.RIGHT_SHOULDER].x,\n        poseLandmarks[POSE_LANDMARKS.RIGHT_ELBOW].y -\n          poseLandmarks[POSE_LANDMARKS.RIGHT_SHOULDER].y,\n        poseLandmarks[POSE_LANDMARKS.RIGHT_ELBOW].z -\n          poseLandmarks[POSE_LANDMARKS.RIGHT_SHOULDER].z,\n      ],\n      leftWristToLeftElbow: [\n        poseLandmarks[POSE_LANDMARKS.LEFT_WRIST].x -\n          poseLandmarks[POSE_LANDMARKS.LEFT_ELBOW].x,\n        poseLandmarks[POSE_LANDMARKS.LEFT_WRIST].y -\n          poseLandmarks[POSE_LANDMARKS.LEFT_ELBOW].y,\n        poseLandmarks[POSE_LANDMARKS.LEFT_WRIST].z -\n          poseLandmarks[POSE_LANDMARKS.LEFT_ELBOW].z,\n      ],\n      leftElbowToLeftShoulder: [\n        poseLandmarks[POSE_LANDMARKS.LEFT_ELBOW].x -\n          poseLandmarks[POSE_LANDMARKS.LEFT_SHOULDER].x,\n        poseLandmarks[POSE_LANDMARKS.LEFT_ELBOW].y -\n          poseLandmarks[POSE_LANDMARKS.LEFT_SHOULDER].y,\n        poseLandmarks[POSE_LANDMARKS.LEFT_ELBOW].z -\n          poseLandmarks[POSE_LANDMARKS.LEFT_SHOULDER].z,\n      ],\n    };\n  }\n\n  static isSimilarPose(\n    poseVectorA: PoseVector,\n    poseVectorB: PoseVector,\n    threshold = 0.9\n  ): boolean {\n    let isSimilar = false;\n    const similarity = PoseSet.getPoseSimilarity(poseVectorA, poseVectorB);\n    if (similarity >= threshold) isSimilar = true;\n\n    // console.log(`[PoseSet] isSimilarPose`, isSimilar, similarity);\n\n    return isSimilar;\n  }\n\n  static getPoseSimilarity(\n    poseVectorA: PoseVector,\n    poseVectorB: PoseVector\n  ): number {\n    const cosSimilarities = {\n      leftWristToLeftElbow: cosSimilarity(\n        poseVectorA.leftWristToLeftElbow,\n        poseVectorB.leftWristToLeftElbow\n      ),\n      leftElbowToLeftShoulder: cosSimilarity(\n        poseVectorA.leftElbowToLeftShoulder,\n        poseVectorB.leftElbowToLeftShoulder\n      ),\n      rightWristToRightElbow: cosSimilarity(\n        poseVectorA.rightWristToRightElbow,\n        poseVectorB.rightWristToRightElbow\n      ),\n      rightElbowToRightShoulder: cosSimilarity(\n        poseVectorA.rightElbowToRightShoulder,\n        poseVectorB.rightElbowToRightShoulder\n      ),\n    };\n\n    const cosSimilaritiesSum = Object.values(cosSimilarities).reduce(\n      (sum, value) => sum + value,\n      0\n    );\n    return cosSimilaritiesSum / Object.keys(cosSimilarities).length;\n  }\n\n  public async getZip(): Promise<Blob> {\n    const jsZip = new JSZip();\n    jsZip.file('poses.json', await this.getJson());\n\n    const imageFileExt = this.getFileExtensionByMime(this.IMAGE_MIME);\n\n    for (const pose of this.poses) {\n      if (pose.frameImageDataUrl) {\n        try {\n          const index =\n            pose.frameImageDataUrl.indexOf('base64,') + 'base64,'.length;\n          const base64 = pose.frameImageDataUrl.substring(index);\n          jsZip.file(`frame-${pose.timeMiliseconds}.${imageFileExt}`, base64, {\n            base64: true,\n          });\n        } catch (error) {\n          console.warn(\n            `[PoseExporterService] push - Could not push frame image`,\n            error\n          );\n          throw error;\n        }\n      }\n      if (pose.poseImageDataUrl) {\n        try {\n          const index =\n            pose.poseImageDataUrl.indexOf('base64,') + 'base64,'.length;\n          const base64 = pose.poseImageDataUrl.substring(index);\n          jsZip.file(`pose-${pose.timeMiliseconds}.${imageFileExt}`, base64, {\n            base64: true,\n          });\n        } catch (error) {\n          console.warn(\n            `[PoseExporterService] push - Could not push frame image`,\n            error\n          );\n          throw error;\n        }\n      }\n    }\n\n    return await jsZip.generateAsync({ type: 'blob' });\n  }\n\n  getFileExtensionByMime(IMAGE_MIME: string) {\n    switch (IMAGE_MIME) {\n      case 'image/png':\n        return 'png';\n      case 'image/jpeg':\n        return 'jpg';\n      case 'image/webp':\n        return 'webp';\n      default:\n        return 'png';\n    }\n  }\n\n  public async getJson(): Promise<string> {\n    if (this.videoMetadata === undefined || this.poses === undefined)\n      return '{}';\n\n    if (!this.isFinalized) {\n      await this.finalize();\n    }\n\n    let poseLandmarkMappings = [];\n    for (const key of Object.keys(POSE_LANDMARKS)) {\n      const index: number = POSE_LANDMARKS[key as keyof typeof POSE_LANDMARKS];\n      poseLandmarkMappings[index] = key;\n    }\n\n    const json: PoseSetJson = {\n      generator: 'mp-video-pose-extractor',\n      version: 1,\n      video: this.videoMetadata!,\n      poses: this.poses.map((pose: PoseSetItem): PoseSetJsonItem => {\n        const poseVector = [];\n        for (const key of PoseSet.POSE_VECTOR_MAPPINGS) {\n          poseVector.push(pose.vectors[key as keyof PoseVector]);\n        }\n\n        return {\n          t: pose.timeMiliseconds,\n          d: pose.durationMiliseconds,\n          p: pose.pose,\n          l: pose.leftHand,\n          r: pose.rightHand,\n          v: poseVector,\n        };\n      }),\n      poseLandmarkMapppings: poseLandmarkMappings,\n    };\n\n    return JSON.stringify(json);\n  }\n\n  loadJson(json: string | any) {\n    const parsedJson = typeof json === 'string' ? JSON.parse(json) : json;\n\n    if (parsedJson.generator !== 'mp-video-pose-extractor') {\n      throw '不正なファイル';\n    } else if (parsedJson.version !== 1) {\n      throw '未対応のバージョン';\n    }\n\n    this.videoMetadata = parsedJson.video;\n    this.poses = parsedJson.poses.map((item: PoseSetJsonItem): PoseSetItem => {\n      const poseVector: any = {};\n      PoseSet.POSE_VECTOR_MAPPINGS.map((key, index) => {\n        poseVector[key as keyof PoseVector] = item.v[index];\n      });\n\n      return {\n        timeMiliseconds: item.t,\n        durationMiliseconds: item.d,\n        pose: item.p,\n        leftHand: item.l,\n        rightHand: item.r,\n        vectors: poseVector,\n        frameImageDataUrl: undefined,\n      };\n    });\n  }\n\n  async loadZip(buffer: ArrayBuffer, includeImages: boolean = true) {\n    console.log(`[PoseSet] loadZip...`, JSZip);\n    const jsZip = new JSZip();\n    console.log(`[PoseSet] init...`);\n    const zip = await jsZip.loadAsync(buffer, { base64: false });\n    if (!zip) throw 'ZIPファイルを読み込めませんでした';\n\n    const json = await zip.file('poses.json')?.async('text');\n    if (json === undefined) {\n      throw 'ZIPファイルに pose.json が含まれていません';\n    }\n\n    this.loadJson(json);\n\n    const fileExt = this.getFileExtensionByMime(this.IMAGE_MIME);\n\n    if (includeImages) {\n      for (const pose of this.poses) {\n        if (!pose.frameImageDataUrl) {\n          const frameImageFileName = `frame-${pose.timeMiliseconds}.${fileExt}`;\n          const imageBase64 = await zip\n            .file(frameImageFileName)\n            ?.async('base64');\n          if (imageBase64) {\n            pose.frameImageDataUrl = `data:${this.IMAGE_MIME};base64,${imageBase64}`;\n          }\n        }\n        if (!pose.poseImageDataUrl) {\n          const poseImageFileName = `pose-${pose.timeMiliseconds}.${fileExt}`;\n          const imageBase64 = await zip\n            .file(poseImageFileName)\n            ?.async('base64');\n          if (imageBase64) {\n            pose.poseImageDataUrl = `data:${this.IMAGE_MIME};base64,${imageBase64}`;\n          }\n        }\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PoseSet } from '../classes/pose-set';\n\n/**\n * ポーズを管理するためのサービス\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PoseComposerService {\n  constructor() {}\n\n  init(videoName: string): PoseSet {\n    const poseSet = new PoseSet();\n    poseSet.setVideoName(videoName);\n    return poseSet;\n  }\n\n  async downloadAsJson(poseSet: PoseSet) {\n    const blob = new Blob([await poseSet.getJson()], {\n      type: 'application/json',\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.target = '_blank';\n    a.download = `${poseSet.getVideoName()}-poses.json`;\n    a.click();\n  }\n\n  async downloadAsZip(poseSet: PoseSet) {\n    const content = await poseSet.getZip();\n    const url = window.URL.createObjectURL(content);\n    const a = document.createElement('a');\n    a.href = url;\n    a.target = '_blank';\n    a.download = `${poseSet.getVideoName()}-poses.zip`;\n    a.click();\n  }\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport {\n  HAND_CONNECTIONS,\n  Holistic,\n  NormalizedLandmark,\n  NormalizedLandmarkList,\n  POSE_CONNECTIONS,\n  POSE_LANDMARKS,\n  POSE_LANDMARKS_LEFT,\n  POSE_LANDMARKS_RIGHT,\n  Results,\n} from '@mediapipe/holistic';\nimport { drawConnectors, drawLandmarks, lerp } from '@mediapipe/drawing_utils';\n\n/**\n * MediaPipe を用いて動画からポーズを抽出するためのサービス\n *\n * ※ シングルトンなサービスではないため、Component で providers に指定して使用することを想定\n */\n@Injectable()\nexport class PoseExtractorService {\n  public onResultsEventEmitter: EventEmitter<{\n    mpResults: Results;\n    sourceImageDataUrl: string;\n    posePreviewImageDataUrl: string;\n  }> = new EventEmitter();\n\n  private holistic?: Holistic;\n\n  private posePreviewCanvasElement?: HTMLCanvasElement;\n  private posePreviewCanvasContext?: CanvasRenderingContext2D;\n\n  private handPreviewCanvasElement?: HTMLCanvasElement;\n  private handPreviewCanvasContext?: CanvasRenderingContext2D;\n\n  constructor() {\n    this.init();\n  }\n\n  public getPosePreviewMediaStream(): MediaStream | undefined {\n    if (!this.posePreviewCanvasElement) return;\n    return this.posePreviewCanvasElement.captureStream();\n  }\n\n  public getHandPreviewMediaStream(): MediaStream | undefined {\n    if (!this.handPreviewCanvasElement) return;\n    return this.handPreviewCanvasElement.captureStream();\n  }\n\n  public async onVideoFrame(videoElement: HTMLVideoElement) {\n    if (!this.holistic) return;\n\n    if (this.posePreviewCanvasElement) {\n      this.posePreviewCanvasElement.width = videoElement.videoWidth;\n      this.posePreviewCanvasElement.height = videoElement.videoHeight;\n    }\n\n    if (this.handPreviewCanvasElement) {\n      this.handPreviewCanvasElement.width = videoElement.videoWidth;\n      this.handPreviewCanvasElement.height = videoElement.videoHeight;\n    }\n\n    await this.holistic.send({ image: videoElement });\n  }\n\n  private init() {\n    this.posePreviewCanvasElement = document.createElement('canvas');\n    this.posePreviewCanvasContext =\n      this.posePreviewCanvasElement.getContext('2d') || undefined;\n\n    this.handPreviewCanvasElement = document.createElement('canvas');\n    this.handPreviewCanvasContext =\n      this.handPreviewCanvasElement.getContext('2d') || undefined;\n\n    this.holistic = new Holistic({\n      locateFile: (file) => {\n        return `https://cdn.jsdelivr.net/npm/@mediapipe/holistic/${file}`;\n      },\n    });\n\n    this.holistic.setOptions({\n      selfieMode: false,\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: false,\n      smoothSegmentation: true,\n      minDetectionConfidence: 0.6,\n      minTrackingConfidence: 0.6,\n    });\n\n    this.holistic.onResults((results: Results) => {\n      this.onResults(results);\n    });\n  }\n\n  private onResults(results: Results) {\n    if (\n      !this.posePreviewCanvasElement ||\n      !this.posePreviewCanvasContext ||\n      !this.holistic\n    )\n      return;\n\n    // 描画用に不必要なランドマークを除去\n    let poseLandmarks: NormalizedLandmarkList = [];\n    if (results.poseLandmarks) {\n      poseLandmarks = JSON.parse(\n        JSON.stringify(results.poseLandmarks)\n      ) as NormalizedLandmarkList;\n      this.removeElements(\n        poseLandmarks,\n        [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22]\n      );\n    }\n\n    // キャンバスを塗りつぶし\n    this.posePreviewCanvasContext.save();\n    this.posePreviewCanvasContext.clearRect(\n      0,\n      0,\n      this.posePreviewCanvasElement.width,\n      this.posePreviewCanvasElement.height\n    );\n\n    // 検出に使用したフレーム画像を描画\n    this.posePreviewCanvasContext.drawImage(\n      results.image,\n      0,\n      0,\n      this.posePreviewCanvasElement.width,\n      this.posePreviewCanvasElement.height\n    );\n\n    // 検出に使用したフレーム画像を保持 (加工されていない画像)\n    const sourceImageDataUrl =\n      this.posePreviewCanvasElement.toDataURL('image/png');\n\n    // 肘と手をつなぐ線を描画\n    this.posePreviewCanvasContext.lineWidth = 5;\n    if (poseLandmarks) {\n      if (results.rightHandLandmarks) {\n        this.posePreviewCanvasContext.strokeStyle = 'white';\n        this.connect(this.posePreviewCanvasContext, [\n          [\n            poseLandmarks[POSE_LANDMARKS.RIGHT_ELBOW],\n            results.rightHandLandmarks[0],\n          ],\n        ]);\n      }\n      if (results.leftHandLandmarks) {\n        this.posePreviewCanvasContext.strokeStyle = 'white';\n        this.connect(this.posePreviewCanvasContext, [\n          [\n            poseLandmarks[POSE_LANDMARKS.LEFT_ELBOW],\n            results.leftHandLandmarks[0],\n          ],\n        ]);\n      }\n    }\n\n    // ポーズのプレビューを描画\n    if (poseLandmarks) {\n      drawConnectors(\n        this.posePreviewCanvasContext,\n        poseLandmarks,\n        POSE_CONNECTIONS,\n        { color: 'white' }\n      );\n      drawLandmarks(\n        this.posePreviewCanvasContext,\n        Object.values(POSE_LANDMARKS_LEFT).map((index) => poseLandmarks[index]),\n        { visibilityMin: 0.65, color: 'white', fillColor: 'rgb(255,138,0)' }\n      );\n      drawLandmarks(\n        this.posePreviewCanvasContext,\n        Object.values(POSE_LANDMARKS_RIGHT).map(\n          (index) => poseLandmarks[index]\n        ),\n        { visibilityMin: 0.65, color: 'white', fillColor: 'rgb(0,217,231)' }\n      );\n    }\n\n    // 手のプレビューを描画\n    drawConnectors(\n      this.posePreviewCanvasContext,\n      results.rightHandLandmarks,\n      HAND_CONNECTIONS,\n      { color: 'white' }\n    );\n    drawLandmarks(this.posePreviewCanvasContext, results.rightHandLandmarks, {\n      color: 'white',\n      fillColor: 'rgb(0,217,231)',\n      lineWidth: 2,\n      radius: (data: any) => {\n        return lerp(data.from.z, -0.15, 0.1, 10, 1);\n      },\n    });\n    drawConnectors(\n      this.posePreviewCanvasContext,\n      results.leftHandLandmarks,\n      HAND_CONNECTIONS,\n      { color: 'white' }\n    );\n    drawLandmarks(this.posePreviewCanvasContext, results.leftHandLandmarks, {\n      color: 'white',\n      fillColor: 'rgb(255,138,0)',\n      lineWidth: 2,\n      radius: (data: any) => {\n        return lerp(data.from.z, -0.15, 0.1, 10, 1);\n      },\n    });\n\n    // 手の領域のみのプレビューを生成\n    if (this.handPreviewCanvasContext && this.handPreviewCanvasElement) {\n      const HAND_PREVIEW_ZOOM = 3;\n      const handPreviewBaseY = this.handPreviewCanvasElement.height / 2;\n\n      this.handPreviewCanvasContext.clearRect(\n        0,\n        0,\n        this.handPreviewCanvasElement.width,\n        this.handPreviewCanvasElement.height\n      );\n\n      if (results.rightHandLandmarks) {\n        const rect = this.getRectByLandmarks(\n          results.rightHandLandmarks,\n          results.image.width,\n          results.image.height\n        );\n\n        let handPreviewX = 0;\n        let handPreviewY = handPreviewBaseY - (rect[3] * HAND_PREVIEW_ZOOM) / 2;\n\n        this.handPreviewCanvasContext.drawImage(\n          this.posePreviewCanvasElement,\n          rect[0] - 10,\n          rect[1] - 10,\n          rect[2] + 10,\n          rect[3] + 10,\n          handPreviewX,\n          handPreviewY,\n          rect[2] * HAND_PREVIEW_ZOOM,\n          rect[3] * HAND_PREVIEW_ZOOM\n        );\n      }\n\n      if (results.leftHandLandmarks) {\n        const rect = this.getRectByLandmarks(\n          results.leftHandLandmarks,\n          results.image.width,\n          results.image.height\n        );\n\n        let handPreviewX =\n          this.handPreviewCanvasElement.width - rect[2] * HAND_PREVIEW_ZOOM;\n        let handPreviewY = handPreviewBaseY - (rect[3] * HAND_PREVIEW_ZOOM) / 2;\n\n        this.handPreviewCanvasContext.drawImage(\n          this.posePreviewCanvasElement,\n          rect[0] - 10,\n          rect[1] - 10,\n          rect[2] + 10,\n          rect[3] + 10,\n          handPreviewX,\n          handPreviewY,\n          rect[2] * HAND_PREVIEW_ZOOM,\n          rect[3] * HAND_PREVIEW_ZOOM\n        );\n      }\n    }\n\n    // イベントを送出\n    this.onResultsEventEmitter.emit({\n      mpResults: results,\n      // 加工されていない画像 (PNG)\n      sourceImageDataUrl: sourceImageDataUrl,\n      // 加工された画像 (PNG)\n      posePreviewImageDataUrl:\n        this.posePreviewCanvasElement.toDataURL('image/png'),\n    });\n\n    // 完了\n    this.posePreviewCanvasContext.restore();\n  }\n\n  private connect(\n    ctx: CanvasRenderingContext2D,\n    connectors: Array<[NormalizedLandmark, NormalizedLandmark]>\n  ) {\n    const canvas = ctx.canvas;\n    for (const connector of connectors) {\n      const from = connector[0];\n      const to = connector[1];\n      if (from && to) {\n        if (\n          from.visibility &&\n          to.visibility &&\n          (from.visibility < 0.1 || to.visibility < 0.1)\n        ) {\n          continue;\n        }\n        ctx.beginPath();\n        ctx.moveTo(from.x * canvas.width, from.y * canvas.height);\n        ctx.lineTo(to.x * canvas.width, to.y * canvas.height);\n        ctx.stroke();\n      }\n    }\n  }\n\n  private removeElements(\n    landmarks: NormalizedLandmarkList,\n    elements: number[]\n  ) {\n    for (const element of elements) {\n      delete landmarks[element];\n    }\n  }\n\n  private getRectByLandmarks(landmarks: any[], width: number, height: number) {\n    const leftHandLandmarksX = landmarks.map((landmark) => landmark.x * width);\n    const leftHandLandmarksY = landmarks.map((landmark) => landmark.y * height);\n    const minX = Math.min(...leftHandLandmarksX);\n    const maxX = Math.max(...leftHandLandmarksX);\n    const minY = Math.min(...leftHandLandmarksY);\n    const maxY = Math.max(...leftHandLandmarksY);\n    return [minX, minY, maxX - minX, maxY - minY];\n  }\n}\n","/*\n * Public API Surface of ngx-mp-pose-extractor\n */\n\nexport * from './lib/ngx-mp-pose-extractor.service';\nexport * from './lib/ngx-mp-pose-extractor.component';\nexport * from './lib/ngx-mp-pose-extractor.module';\n\nexport * from './lib/interfaces/pose-vector';\nexport * from './lib/interfaces/pose-set-item';\nexport * from './lib/interfaces/pose-set-json-item';\nexport * from './lib/interfaces/pose-set-json';\n\nexport * from './lib/classes/pose-set';\n\nexport * from './lib/services/pose-composer.service';\nexport * from './lib/services/pose-extractor.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}